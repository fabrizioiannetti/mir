/*
 * AUTOGENERATED - DO NOT EDIT
 *
 * This file is generated from xdg-decoration-unstable-v1.xml
 * To regenerate, run the “refresh-wayland-wrapper” target.
 */

#include "xdg-decoration-unstable-v1_wrapper.h"

#include <boost/throw_exception.hpp>
#include <boost/exception/diagnostic_information.hpp>

#include <wayland-server-core.h>

#include "mir/log.h"

namespace mir
{
namespace frontend
{
namespace wayland
{
extern struct wl_interface const xdg_toplevel_interface_data;
extern struct wl_interface const zxdg_decoration_manager_v1_interface_data;
extern struct wl_interface const zxdg_toplevel_decoration_v1_interface_data;
}
}
}

namespace mfw = mir::frontend::wayland;

namespace
{
struct wl_interface const* all_null_types [] {
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr,
    nullptr};
}

// XdgDecorationManagerV1

mfw::XdgDecorationManagerV1* mfw::XdgDecorationManagerV1::from(struct wl_resource* resource)
{
    return static_cast<XdgDecorationManagerV1*>(wl_resource_get_user_data(resource));
}

struct mfw::XdgDecorationManagerV1::Thunks
{
    static void destroy_thunk(struct wl_client* client, struct wl_resource* resource)
    {
        auto me = static_cast<XdgDecorationManagerV1*>(wl_resource_get_user_data(resource));
        try
        {
            me->destroy(client, resource);
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgDecorationManagerV1::destroy() request");
        }
    }

    static void get_toplevel_decoration_thunk(struct wl_client* client, struct wl_resource* resource, uint32_t id, struct wl_resource* toplevel)
    {
        auto me = static_cast<XdgDecorationManagerV1*>(wl_resource_get_user_data(resource));
        try
        {
            me->get_toplevel_decoration(client, resource, id, toplevel);
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgDecorationManagerV1::get_toplevel_decoration() request");
        }
    }

    static void bind_thunk(struct wl_client* client, void* data, uint32_t version, uint32_t id)
    {
        auto me = static_cast<XdgDecorationManagerV1*>(data);
        auto resource = wl_resource_create(client, &zxdg_decoration_manager_v1_interface_data,
                                           std::min(version, me->max_version), id);
        if (resource == nullptr)
        {
            wl_client_post_no_memory(client);
            BOOST_THROW_EXCEPTION((std::bad_alloc{}));
        }
        wl_resource_set_implementation(resource, Thunks::request_vtable, me, nullptr);
        try
        {
            me->bind(client, resource);
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgDecorationManagerV1::bind() request");
        }
    }

    static struct wl_interface const* get_toplevel_decoration_types[];
    static struct wl_message const request_messages[];
    static void const* request_vtable[];
};

mfw::XdgDecorationManagerV1::XdgDecorationManagerV1(struct wl_display* display, uint32_t max_version)
    : global{wl_global_create(display, &zxdg_decoration_manager_v1_interface_data, max_version, this, &Thunks::bind_thunk)},
      max_version{max_version}
{
    if (global == nullptr)
    {
        BOOST_THROW_EXCEPTION((std::runtime_error{"Failed to export zxdg_decoration_manager_v1 interface"}));
    }
}

mfw::XdgDecorationManagerV1::~XdgDecorationManagerV1()
{
    wl_global_destroy(global);
}

void mfw::XdgDecorationManagerV1::destroy_wayland_object(struct wl_resource* resource) const
{
    wl_resource_destroy(resource);
}

struct wl_interface const* mfw::XdgDecorationManagerV1::Thunks::get_toplevel_decoration_types[] {
    &zxdg_toplevel_decoration_v1_interface_data,
    &xdg_toplevel_interface_data};

struct wl_message const mfw::XdgDecorationManagerV1::Thunks::request_messages[] {
    {"destroy", "", all_null_types},
    {"get_toplevel_decoration", "no", get_toplevel_decoration_types}};

void const* mfw::XdgDecorationManagerV1::Thunks::request_vtable[] {
    (void*)Thunks::destroy_thunk,
    (void*)Thunks::get_toplevel_decoration_thunk};

// XdgToplevelDecorationV1

mfw::XdgToplevelDecorationV1* mfw::XdgToplevelDecorationV1::from(struct wl_resource* resource)
{
    return static_cast<XdgToplevelDecorationV1*>(wl_resource_get_user_data(resource));
}

struct mfw::XdgToplevelDecorationV1::Thunks
{
    static void destroy_thunk(struct wl_client*, struct wl_resource* resource)
    {
        auto me = static_cast<XdgToplevelDecorationV1*>(wl_resource_get_user_data(resource));
        try
        {
            me->destroy();
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgToplevelDecorationV1::destroy() request");
        }
    }

    static void set_mode_thunk(struct wl_client*, struct wl_resource* resource, uint32_t mode)
    {
        auto me = static_cast<XdgToplevelDecorationV1*>(wl_resource_get_user_data(resource));
        try
        {
            me->set_mode(mode);
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgToplevelDecorationV1::set_mode() request");
        }
    }

    static void unset_mode_thunk(struct wl_client*, struct wl_resource* resource)
    {
        auto me = static_cast<XdgToplevelDecorationV1*>(wl_resource_get_user_data(resource));
        try
        {
            me->unset_mode();
        }
        catch(...)
        {
            ::mir::log(::mir::logging::Severity::critical,
                       "frontend:Wayland",
                       std::current_exception(),
                       "Exception processing XdgToplevelDecorationV1::unset_mode() request");
        }
    }

    static void resource_destroyed_thunk(wl_resource* resource)
    {
        delete static_cast<XdgToplevelDecorationV1*>(wl_resource_get_user_data(resource));
    }

    static struct wl_message const request_messages[];
    static struct wl_message const event_messages[];
    static void const* request_vtable[];
};

mfw::XdgToplevelDecorationV1::XdgToplevelDecorationV1(struct wl_client* client, struct wl_resource* parent, uint32_t id)
    : client{client},
      resource{wl_resource_create(client, &zxdg_toplevel_decoration_v1_interface_data, wl_resource_get_version(parent), id)}
{
    if (resource == nullptr)
    {
        wl_resource_post_no_memory(parent);
        BOOST_THROW_EXCEPTION((std::bad_alloc{}));
    }
    wl_resource_set_implementation(resource, Thunks::request_vtable, this, &Thunks::resource_destroyed_thunk);
}

void mfw::XdgToplevelDecorationV1::send_configure_event(uint32_t mode) const
{
    wl_resource_post_event(resource, Opcode::configure, mode);
}

void mfw::XdgToplevelDecorationV1::destroy_wayland_object() const
{
    wl_resource_destroy(resource);
}

struct wl_message const mfw::XdgToplevelDecorationV1::Thunks::request_messages[] {
    {"destroy", "", all_null_types},
    {"set_mode", "u", all_null_types},
    {"unset_mode", "", all_null_types}};

struct wl_message const mfw::XdgToplevelDecorationV1::Thunks::event_messages[] {
    {"configure", "u", all_null_types}};

void const* mfw::XdgToplevelDecorationV1::Thunks::request_vtable[] {
    (void*)Thunks::destroy_thunk,
    (void*)Thunks::set_mode_thunk,
    (void*)Thunks::unset_mode_thunk};

namespace mir
{
namespace frontend
{
namespace wayland
{

struct wl_interface const zxdg_decoration_manager_v1_interface_data {
    "zxdg_decoration_manager_v1", 1,
    2, mfw::XdgDecorationManagerV1::Thunks::request_messages,
    0, nullptr};

struct wl_interface const zxdg_toplevel_decoration_v1_interface_data {
    "zxdg_toplevel_decoration_v1", 1,
    3, mfw::XdgToplevelDecorationV1::Thunks::request_messages,
    1, mfw::XdgToplevelDecorationV1::Thunks::event_messages};

}
}
}
